---
- name: Read the PostgreSQL password from the .pgpass file
  block:

    - name: "Slurp {{ postgresql_postgres_home }}/.pgpass"
      slurp:
        src: "{{ postgresql_postgres_home }}/.pgpass"
      register: postgresql_pgpass_b64encoded
      # no_log: true

    - name: "Set an array for the lines in the {{ postgresql_postgres_home }}/.pgpass file"
      set_fact:
        postgresql_pgpass_lines: "{{ ( postgresql_pgpass_b64encoded['content'] | b64decode | trim ).split('\n') }}"
      # no_log: true

    - name: "Read the {{ postgresql_user }} password line from the postgresql_pgpass_lines array"
      set_fact:
        postgresql_pgpass_line_elements: "{{ line.split(':') }}"
      when: postgresql_pgpass_line in line
      loop: "{{ postgresql_pgpass_lines }}"
      loop_control:
        loop_var: line
      # no_log: true

    - name: "Set a fact for the {{ postgresql_user }} password"
      set_fact:
        postgresql_password: "{{ postgresql_pgpass_line_elements[5] }}"
      # no_log: true

    # TODO Check that the password works and if it doesn't delete the line
    # and set postgresql_password back to an empty string

  tags:
    - postgresql
...
